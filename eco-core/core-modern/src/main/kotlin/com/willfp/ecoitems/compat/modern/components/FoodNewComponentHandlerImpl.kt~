package com.willfp.ecoitems.compat.modern.components

import com.willfp.eco.core.config.interfaces.Config
import com.willfp.ecoitems.items.components.FoodComponentHandler
import de.tr7zw.changeme.nbtapi.NBTItem
import net.kyori.adventure.text.NBTComponent
import org.bukkit.NamespacedKey
import org.bukkit.Registry
import org.bukkit.attribute.Attribute
import org.bukkit.inventory.ItemStack
import org.bukkit.potion.PotionEffect


class FoodNewComponentHandlerImpl : FoodComponentHandler() {

    override fun apply(item: ItemStack, config: Config) {
        val meta = item.itemMeta ?: return

        val food = meta.food
        food.nutrition = config.getInt("nutrition")
        food.saturation = config.getDouble("saturation").toFloat()

        if (config.has("can-always-eat")) {
            food.setCanAlwaysEat(config.getBool("can-always-eat"))
        }

        meta.setFood(food)
        item.itemMeta = meta


        for (effectConfig in config.getSubsections("effects")) {
            val effect = Registry.POTION_EFFECT_TYPE.get(
                NamespacedKey.minecraft(effectConfig.getString("effect").lowercase())
            ) ?: continue

            val amplifier = effectConfig.getInt("level") - 1
            val duration = effectConfig.getInt("duration")

            val ambient = effectConfig.getBoolOrNull("ambient") ?: true
            val particles = effectConfig.getBoolOrNull("particles") ?: true
            val icon = effectConfig.getBoolOrNull("icon") ?: true

            val probability = (effectConfig.getDoubleOrNull("probability") ?: 100.0).toFloat() / 100f



            addFoodEffectNBT(item,   PotionEffect(
                effect,
                duration,
                amplifier,
                ambient,
                particles,
                icon
            ),probability)

        }

        setEatTimeNBT(item, config.getDouble("eat-seconds").toFloat())
    }


    fun setEatTimeNBT(item: ItemStack, seconds: Float) {
        val nbtItem = NBTItem(item)
        nbtItem.getOrCreateCompound("components")
            .getOrCreateCompound("minecraft:food")
            .setFloat("eat_seconds", seconds)
        nbtItem.applyNBT(item)
    }

    fun addFoodEffectNBT(item: ItemStack, effect: PotionEffect, probability: Float) {
        val nbtItem = NBTItem(item)
        val foodCompound = nbtItem.getOrCreateCompound("components")
            .getOrCreateCompound("minecraft:food")

        val effectsList = foodCompound.getCompoundList("effects")
        val effectCompound = effectsList.addCompound()

        effectCompound.setString("type", "minecraft:effect") // Required in 1.21.5
        effectCompound.setFloat("probability", probability)

        val effectData = effectCompound.addCompound("effect")
        effectData.setString("id", effect.type.key.key) // e.g., "minecraft:regeneration"
        effectData.setInteger("duration", effect.duration)
        effectData.setInteger("amplifier", effect.amplifier)
        effectData.setBoolean("show_particles", effect.hasParticles())

        nbtItem.applyNBT(item)
    }
}